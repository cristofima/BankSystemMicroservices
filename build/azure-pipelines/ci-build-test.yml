trigger:
  branches:
    include:
      - main
      - develop
      - feature/*
  paths:
    include:
      - 'src/services/**/src/**'
      - 'src/services/**/tests/**'
      - 'build/azure-pipelines/ci-build-test.yml'
    exclude:
      - 'src/services/**/*.md'
      - 'src/services/**/README.md'

variables:
  buildConfiguration: 'Release'
  solution: 'src/BankSystem.sln'
  testProjectsPattern: 'src/**/tests/**/*.csproj'
  coverageReportsFolder: '$(Agent.TempDirectory)/CoverageReports'
  
pool:
  vmImage: 'windows-latest'

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET 9 SDK'
    inputs:
      packageType: 'sdk'
      version: '9.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: SonarQubePrepare@7
    displayName: 'Prepare SonarQube Analysis'
    inputs:
      SonarQube: 'SonarQube'
      organization: '$(SONAR_ORGANIZATION)'
      scannerMode: 'dotnet'
      projectKey: '$(SONAR_PROJECT_KEY)'
      projectName: '$(SONAR_PROJECT_NAME)'

  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'
      projects: '$(solution)'

  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: 'build'
      projects: '$(solution)'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Run Tests with Code Coverage'
    inputs:
      command: 'test'
      projects: |
        **/tests/**/*.csproj
      arguments: >
        --configuration $(buildConfiguration)
        --no-build
        --collect:"Code Coverage"
        --settings $(Build.SourcesDirectory)/src/coverlet.runsettings
      publishTestResults: true

  - task: PublishCodeCoverageResults@2
    displayName: 'Publish Code Coverage to Azure DevOps'
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(coverageReportsFolder)/**/coverage.cobertura.xml'

  - task: SonarQubeAnalyze@7
    displayName: 'Run SonarQube Analysis'